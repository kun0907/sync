<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PickNoticeDetail">
    <resultMap id="PickNoticeDetailMap" type="PickNoticeDetail">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Mar 20 19:40:06 CST 2017.
        -->
        <id column="pick_detail_id" jdbcType="VARCHAR" property="pickDetailId"/>
        <result column="pick_num" jdbcType="DECIMAL" property="pickNum"/>
        <result column="tallyed_num"  property="tallyedNum"/>
        <result column="stock_num" property="stockNum" jdbcType="DECIMAL"/>
        <association property="demandplan" column="demandplan" select="DemandPlan.selectByPk"/>
        <association property="demanddetail" column="demanddetail" select="DemandDetail.selectByPk"/>
        <association property="materials" column="materials" select="Materials.selectByPk"/>
        <association property="wbs" column="wbs" select="Project.selectByPk"/>
        <association property="stock" column="stock" select="Stock.selectByPk"/>
        <association property="pickNotice" column="pickNotice" javaType="PickNotice" resultMap="PickNotice.PickNoticeMap">
        </association>
    </resultMap>
    <select id="queryDetailByPickNotice" resultMap="PickNoticeDetailMap" parameterType="string">
        SELECT opnd.*,nvl(s.stock_num,0) stock_num from out_pick_notice_detail opnd
        left join (
        select sum(stock_num) as stock_num,
        materials,wbs
        from r_stock
        group by materials,wbs
        ) s on s.materials = opnd.materials and s.wbs = opnd.wbs
        <where>
            opnd.pick_notice = #{pickId}
        </where>
    </select>
    <!-- 批量插入领料通知明细 -->
    <insert id="insertList" parameterType="java.util.List" useGeneratedKeys="false">
        insert into out_pick_notice_detail
        (pick_detail_id,demandplan,demanddetail,pick_num,wbs,materials,pick_notice)
        SELECT A.*
        FROM(
        <foreach collection="list" item="item" index="index" separator="UNION ALL">
            (SELECT
            #{item.pickDetailId,jdbcType=VARCHAR} pick_detail_id,
            #{item.demandplan.demandId,jdbcType=VARCHAR} demandplan,
            #{item.demanddetail.demandDetailId,jdbcType=VARCHAR} demanddetail,
            #{item.pickNum,jdbcType=VARCHAR} pick_num,
            #{item.wbs.projectId,jdbcType=CHAR} wbs,
            #{item.materials.materialsId,jdbcType=CHAR} materials,
            #{item.pickNotice.pickId,jdbcType=CHAR} pick_notice
            FROM dual)
        </foreach>
        )A
    </insert>
    <!-- 根据领料通知删除领料通知明细 -->
    <delete id="deleteDetailByPickId" parameterType="string">
        delete from out_pick_notice_detail opnd
        <where>
            opnd.pick_notice = #{pickNotice.pickId}
        </where>
    </delete>
    
    <!-- 查询领料通知明细 -->
    <select id="loadPickDetailListData" resultMap="PickNoticeDetailMap" parameterType="map">
        select * from out_pick_notice_detail opnd
        left join out_pick_notice opn on opnd.pick_notice = opn.pick_id
        left join b_materials bm on opnd.materials = bm.materials_id
        <where>
            opn.pick_notice_state = 'pickNoticeCommit'
            <if test="PickNoticeCondition.supplierId!=null and PickNoticeCondition.supplierId!=''">and opn.supplier = #{PickNoticeCondition.supplierId}</if>
            <if test="PickNoticeCondition.pickNoticeNo!=null and PickNoticeCondition.pickNoticeNo!=''">and opn.pick_no = #{PickNoticeCondition.pickNoticeNo}</if>
            <if test="PickNoticeCondition.wbsId!=null and PickNoticeCondition.wbsId!=''">and opnd.wbs = #{PickNoticeCondition.wbsId}</if>
            <if test="PickNoticeCondition.createUserName!=null and PickNoticeCondition.createUserName!=''">and
                opn.create_user_name like '%'|| #{PickNoticeCondition.createUserName} || '%'
            </if>
            <if test="PickNoticeCondition.beginTime!=null">and
                <![CDATA[ opn.create_time  >=  #{PickNoticeCondition.beginTime} ]]> </if>
            <if test="PickNoticeCondition.endTime!=null">and
                <![CDATA[ opn.create_time  <= #{PickNoticeCondition.endTime} ]]> </if>
            <if test="PickNoticeCondition.materialsCode!=null and PickNoticeCondition.materialsCode!=''">and bm.materials_code like '%' || #{PickNoticeCondition.materialsCode} || '%'</if>
            <if test="PickNoticeCondition.materialsDescribe!=null and PickNoticeCondition.materialsDescribe!=''">and bm.materials_describe like '%' || #{PickNoticeCondition.materialsDescribe} || '%'</if>
        </where>
    </select>
    
    
    <select id="selectByPk" parameterType="string" resultMap="PickNoticeDetailMap">
      select * from out_pick_notice_detail opnd
      <where>
          opnd.pick_detail_id = #{pickDetailId}
      </where>
    </select>


    <update id="update">
      update out_pick_notice_detail opnd
          <set>
              opnd.tallyed_num = #{tallyedNum}
          </set>
        <where>
            opnd.pick_detail_id = #{pickDetailId}
        </where>
    </update>
</mapper>