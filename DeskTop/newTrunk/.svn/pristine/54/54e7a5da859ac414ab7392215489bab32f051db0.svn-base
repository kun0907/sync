<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="DemandDetail">
    <resultMap type="DemandDetail" id="demandDetailMap">
        <id column="demand_detail_id" property="demandDetailId"/>
        <result column="demand_id" property="demandId"/>
        <result column="demand_code" property="demandCode"/>
        <result column="wbs_id" property="wbsId"/>
        <result column="wbs_code" property="wbsCode"/>
        <result column="drawing_number_code" property="drawingNumberCode"/>
        <result column="drawing_number_version" property="drawingNumberVersion"/>

        <result column="design_org_code" property="designOrgCode"/>
        <result column="design_code" property="designCode"/>
        <result column="design_describe" property="designDescribe"/>
        <result column="extra1" property="extra1"/>
        <result column="extra2" property="extra2"/>
        <result column="extra3" property="extra3"/>
        <result column="extra4" property="extra4"/>

        <result column="drawing_number_device_no" property="drawingNumberDeviceNo"/>
        <result column="design_unit" property="designUnit"/>
        <result column="demand_date" property="demandDate"/>
        <result column="demand_count" property="demandCount"/>
        <result column="balance_count" property="balanceCount"/>
        <result column="lose_count" property="loseCount"/>
        <result column="change_count" property="changeCount"/>
        <result column="balance_reason" property="balanceReason"/>
        <result column="materials_id" property="materialsId"/>
        <result column="design_count" property="designCount"/>
        <result column="used_count" property="usedCount"/>
        <result column="stock_num" property="stockNum"/>
        <result column="stock_id" property="stockId"/>
        <result column="drawing_detailed_id" property="drawingDetailedId"/>
    </resultMap>
    <insert id="insertList" parameterType="java.util.List" useGeneratedKeys="false">
        insert into out_demand_detail
        (demand_detail_id,demand_id,
        wbs_id,wbs_code,
        drawing_number_code,drawing_number_version,
        design_org_code,design_code,
        design_describe,extra1,
        extra2,extra3,extra4,
        drawing_number_device_no,design_unit,
        demand_date,demand_count,
        balance_count,lose_count,
        change_count,balance_reason,materials_id,
        design_count,used_count,drawing_detailed_id
        )
        SELECT A.*
        FROM(
        <foreach collection="list" item="item" index="index" separator="UNION ALL">
            (SELECT
            #{item.demandDetailId} demand_detail_id,#{item.demandId} demand_id,
            #{item.wbsId} wbs_id,#{item.wbsCode} wbs_code,
            #{item.drawingNumberCode} drawing_number_code,#{item.drawingNumberVersion} drawing_number_version,
            #{item.designOrgCode} design_org_code,#{item.designCode} design_code,
            #{item.designDescribe} design_describe,#{item.extra1} extra1,
            #{item.extra2} extra2,#{item.extra3} extra3,#{item.extra4} extra4,
            #{item.drawingNumberDeviceNo} drawing_number_device_no,#{item.designUnit} design_unit,
            #{item.demandDate} demand_date,#{item.demandCount,jdbcType=DECIMAL} demand_count,
            #{item.balanceCount,jdbcType=DECIMAL} balance_count,#{item.loseCount,jdbcType=DECIMAL} lose_count,
            #{item.changeCount,jdbcType=DECIMAL} change_count,#{item.balanceReason} balance_reason,
            #{item.materialsId} materials_id,#{item.designCount,jdbcType=DECIMAL} design_count,
            #{item.usedCount,jdbcType=DECIMAL} used_count,#{item.drawingDetailedId} drawing_detailed_id

            FROM dual)
        </foreach>
        )A
    </insert>
    <update id="update" parameterType="DemandDetail">
        update out_demand_detail
        <set>
            balance_reason = #{balanceReason},lose_count = #{loseCount},balance_count = #{balanceCount},
            <if test="usedCount!= null and usedCount !=''">used_count = #{usedCount},</if>
            demand_count = #{demandCount},change_count = #{changeCount}
        </set>
        where demand_detail_id = #{demandDetailId}
    </update>
    <select id="selectByDemandId" resultMap="demandDetailMap">
              select * from out_demand_detail where demand_id=#{demandId}
       </select>
    <delete id="delete" parameterType="string">
              delete from out_demand_detail where demand_id = #{demandId}
       </delete>
    <select id="selectByCondition" resultMap="demandDetailMap" parameterType="map">
        select * from(
        select
        pod.demand_detail_id,pod.demand_id,po.wbs_id,po.wbs_code,
        pod.drawing_number_code,pod.drawing_number_version,
        pod.design_org_code,pod.design_code,
        pod.design_describe,pod.extra1,
        pod.extra2,pod.extra3,pod.extra4,
        pod.drawing_number_device_no,pod.design_unit,
        pod.demand_date,pod.demand_count,
        pod.balance_count,pod.lose_count,
        pod.change_count,pod.balance_reason,pod.materials_id,
        pod.design_count,pod.used_count,po.demand_code as demand_code,
        nvl(s.stock_num,0) stock_num,
        ROW_NUMBER() OVER(order by po.demand_id) r
        from out_demand_detail pod
        left join out_demand_plan po on pod.demand_id=po.demand_id
        left join (
        select sum(stock_num-lock_num) as stock_num,
        materials,wbs
        from r_stock
        group by materials,wbs
        ) s on s.materials = pod.materials_id and s.wbs = po.wbs_id
        <where>
            po.demand_state='demandPass'
            <if test="DemandDetailCondition!=null">
                <if test="DemandDetailCondition.demandCode != null and DemandDetailCondition.demandCode != ''">
                    and po.demand_code = #{DemandDetailCondition.demandCode}
                </if>
                <if test="DemandDetailCondition.demandOrgId != null and DemandDetailCondition.demandOrgId != ''">
                    and po.demand_org_id = #{DemandDetailCondition.demandOrgId}
                </if>
            </if>
        </where>
        )s
    </select>
    <!-- 根据条件查询条目数 -->
    <select id="countByCondition" resultType="int" parameterType="map">
        select count(*)
        from
        out_demand_detail pod
        left join out_demand_plan po
        on pod.demand_id=po.demand_id
        left join (
            select sum(stock_num) as stock_num,
            materials,wbs
            from r_stock
            group by materials,wbs
        ) s on s.materials = pod.materials_id and s.wbs = pod.wbs_id
        <where>
            po.demand_state='demandPass'
            <if test="DemandDetailCondition!=null">
                <if test="DemandDetailCondition.demandCode != null and DemandDetailCondition.demandCode != ''">
                    and po.demand_code = #{DemandDetailCondition.demandCode}
                </if>
                <if test="DemandDetailCondition.demandOrgId != null and DemandDetailCondition.demandOrgId != ''">
                    and po.demand_org_id = #{DemandDetailCondition.demandOrgId}
                </if>
            </if>
        </where>
    </select>


    <select id="selectByPk" resultMap="demandDetailMap" parameterType="string">
        select * from out_demand_detail odd
        <where>
            odd.demand_detail_id = #{demandDetailId}
        </where>
    </select>
       <select id="selectByReceipt" resultMap="demandDetailMap" parameterType="map">
              select * from(
              select
              pod.demand_detail_id,pod.demand_id,
              pod.wbs_id,pod.wbs_code,
              pod.drawing_number_code,pod.drawing_number_version,
              pod.design_org_code,pod.design_code,
              pod.drawing_number_device_no,pod.design_unit,
              pod.demand_date,pod.demand_count,
              pod.balance_count,pod.lose_count,
              pod.change_count,pod.balance_reason,pod.materials_id,
              ROW_NUMBER() OVER(order by po.demand_id) r
              from
              out_demand_detail pod
              left join out_demand_plan po
              on pod.demand_id=po.demand_id
              <where>
                     po.demand_state='demandPass'
                     <if test="wbsId != null and wbsId != ''">
                            and po.wbs_id = #{wbsId}
                     </if>
                     <if test="drawingNumberDeviceNo != null and drawingNumberDeviceNo != ''">
                            and pod.drawing_number_device_no = #{drawingNumberDeviceNo}
                     </if>
                     <if test="materialsId != null and materialsId != ''">
                            and pod.materials_id = #{materialsId}
                     </if>
                     <if test="demandOrgId != null and demandOrgId != ''">
                            and po.demand_org_id = #{demandOrgId}
                     </if>
              </where>
              )s
       </select>
</mapper>
