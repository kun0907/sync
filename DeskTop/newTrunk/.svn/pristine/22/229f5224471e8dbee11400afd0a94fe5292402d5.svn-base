<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">
	<resultMap type="User" id="userMap">
		<id column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		<result column="password" property="password"/>
		<result column="is_validate" property="isValidate"/>
		<result column="is_del" property="isDel"/>
		<result column="is_sysadmin" property="isSysadmin"/>
		<result column="is_orgadmin" property="isOrgadmin"/>
		<association property="employee" column="employee" select="Employee.selectByPk" ></association>
<!-- 		<association property="project" resultMap="Project.projectMap" ></association> -->
		<collection property="userRoleList" ofType="UserRole" column="user_id">
			<result column="user_id" property="userId"/>
			<association property="resource" resultMap="Resource.resourceMap"></association>
			<association property="role" resultMap="Role.roleMap"></association>
        </collection>
	</resultMap>
	<sql id="all">user_id,user_name,password,is_validate,employee,is_del,is_sysadmin,is_orgadmin </sql>
	<!-- 用户登录认证 -->
	<select id="userLogin" resultMap="userMap" parameterType="string">
		select u.user_id,u.user_name,u.password,u.is_sysadmin,u.is_orgadmin,u.employee,
		sur.user_id,sur.resource_id,sur.role_id,sro.role_code,sre.resource_code,rootOrg.org_id,rootOrg.org_code,rootOrg.org_name
		from sys_user u
		left join sys_employee se on se.emp_id = u.employee
		left join sys_user_resource sur on sur.user_id = u.user_id
		left join sys_role sro on sro.role_id = sur.role_id
		left join sys_resource sre on sre.resource_id = sur.resource_id
		left join sys_org rootOrg on rootOrg.org_id = se.root_id
		<where>
			u.user_name = #{username} and u.is_validate = '1' and u.is_del = '0'
		</where>
	</select>
	<!-- 插入用户表信息 -->
	<insert id="insert" parameterType="User" useGeneratedKeys="false">
		insert into sys_user (
			user_id,user_name,password,is_validate,employee,is_del,is_sysadmin,is_orgadmin
		)values(
			#{userId},#{userName},#{password},#{isValidate},#{employee.empId},#{isDel},#{isSysadmin},#{isOrgadmin}
		)
	</insert>
	<!-- 更新用户信息 -->
	<update id="update" parameterType="User">
		update sys_user
		<set>
			<if test="password!= null and password!=''">password = #{password},</if>
			<if test="isValidate!= null and isValidate!=''">is_validate = #{isValidate},</if>
			<if test="isDel!= null and isDel!=''">is_del = #{isDel},</if>
			user_id = #{userId}
		</set>
		where user_id = #{userId}
	</update>
	<!-- 加载用户信息关联人员信息和组织机构信息 -->
	<select id="selectByPk" resultMap="userMap" parameterType="string">
		select u.*,emp_id,emp_no,emp_name,sex,to_char(birthday,'YYYY-MM-DD') as birthday,emp_state,cell_phone,wechat,email,so.org_id,so.root_id from sys_user u
		<!--left join sys_user_role ur on ur.user_id = u.user_id
		left join sys_role r on r.role_id = ur.role_id-->
		
		left join sys_employee se on u.employee = se.emp_id
		left join sys_org so on so.org_id = se.org_id
		where u.user_id=#{userId}
	</select>
	
	
	
	<!-- 根据用户名校验用户名是否重复 -->
	<select id="checkUserName" resultType="int" parameterType="string">
	    select count(*) from sys_user u 
		<where>
		    u.user_name=#{username}
		</where>
	</select>
	<!-- 根据用户id校验原密码是否正确 -->
	<select id="checkOldPwd" resultType="int" parameterType="map">
	    select count(*) from sys_user u 
		<where>
		    u.user_id=#{userId} and u.password=#{oldPwd}
		</where>
	</select>
	
	
	
	<!-- <select id="selectByCondition" resultMap="userMap" parameterType="Map">
		select * from (
			select  us.*, d.department_name, ROW_NUMBER() OVER(order by us.username) r from SYS_USER us 
			left join SYS_DEPARTMENT d on d.department_id = us.department
			<where>
			    us.username !='admin'
				<if test="UserCondition.username!=null and UserCondition.username!=''">and us.username like '%' + #{UserCondition.username} + '%'</if>
				<if test="UserCondition.is_validate!=null and UserCondition.is_validate!=''">and us.is_validate = #{UserCondition.is_validate}</if>
				<if test="UserCondition.real_name!=null and UserCondition.real_name!=''">and us.real_name like '%' + #{UserCondition.real_name} + '%'</if>
			</where>
		) s where s.r between #{page.startPos} and ((#{page.pageSize}+#{page.startPos})-1)  
	</select>
	
	<select id="countByCondition" resultType="int" parameterType="Map">
		select count(*) from SYS_USER us 
		left join SYS_DEPARTMENT d on  d.department_id = us.department
		<where>
		    us.username !='admin'
			<if test="UserCondition.username!=null and UserCondition.username!=''">and us.username like '%' + #{UserCondition.username} + '%'</if>
			<if test="UserCondition.is_validate!=null and UserCondition.is_validate!=''">and us.is_validate = #{UserCondition.is_validate}</if>
			<if test="UserCondition.real_name!=null and UserCondition.real_name!=''">and us.real_name like '%' + #{UserCondition.real_name} + '%'</if>
		</where>		
	</select> -->	
</mapper>