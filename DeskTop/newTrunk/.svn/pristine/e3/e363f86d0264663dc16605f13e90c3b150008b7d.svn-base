<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="Contractor">
	<resultMap type="Contractor" id="contractorMap">
		<id column="contractor_id" property="contractorId" />
		<result column="contract_no" property="contractNo" />
		<result column="operate_area" property="operateArea" />
		<result column="work_address" property="workAddress" />
		<result column="register_capital" property="registerCapital" />
		<result column="register_address" property="registerAddress" />
		<result column="link_man" property="linkMan" />
		<result column="link_phone" property="linkPhone" />
		<result column="email" property="email" />
		<result column="legal_representative" property="legalRepresentative" />
		<result column="enterprise_property" property="enterpriseProperty" />
		<result column="create_time" property="createTime" />
		<result column="create_user_id" property="createUserId" />
		<result column="create_user_name" property="createUserName" />
		<result column="contractor_state" property="contractorState" />
		<association property="organization" column="organization" javaType="Organization" >
				<id column="org_id" property="orgId" />
				<result column="org_code" property="orgCode"/>
				<result column="org_name" property="orgName"/>
				<result column="org_type" property="orgType"/>
				<result column="org_type_name" property="orgTypeName"/>
		</association>
	</resultMap>
	<sql id="all">bc.contractor_id,bc.contract_no,bc.operate_area,bc.work_address,bc.register_capital,bc.register_address,
		bc.link_man,bc.link_phone,bc.email,bc.legal_representative,bc.enterprise_property,so.org_id,so.org_code,so.org_name,
		bc.create_time,bc.create_user_id,bc.create_user_name,bc.contractor_state
	</sql>
	<!-- 分页查询承包商信息  -->
	<select id="selectByCondition" resultMap="contractorMap" parameterType="map">
		select * from (
			select  bc.contractor_id,so.org_id,so.org_code,so.org_name,bc.link_man,bc.link_phone,bc.email,bc.contractor_state,
			wm_concat(to_char(DICTIONARY_NAME)) as org_type_name,
			ROW_NUMBER() OVER(order by bc.create_time desc) r 
			from b_contractor bc
			left join sys_org so on bc.organization = so.org_id
			left  join sys_org_type sot on so.org_id = sot.org_id
			left join sys_dictionary dic on dic.dictionary_code = sot.org_type
			<where>
				dic.is_del = '1'
				<if test="ContractorCondition.orgCode!=null and ContractorCondition.orgCode!=''">and so.org_code  like '%' || #{ContractorCondition.orgCode} || '%' </if>
				<if test="ContractorCondition.orgName!=null and ContractorCondition.orgName!=''">and so.org_name  like '%' || #{ContractorCondition.orgName} || '%' </if>		
				<if test="ContractorCondition.orgType!=null and ContractorCondition.orgType!=''">and sot.org_type = #{ContractorCondition.orgType}</if>		
			</where>
			group by so.org_id,so.org_code,so.org_name,bc.link_man,bc.link_phone,bc.email,bc.create_time,bc.contractor_id,bc.contractor_state
		) s where s.r between #{page.startPos} and ((#{page.pageSize}+#{page.startPos})-1)  
		
	</select>
	<!-- 分页查询承包商数量 -->
	<select id="countByCondition" resultType="int" parameterType="map">
		select count(*) from (
			select distinct sot.org_id from b_contractor bc
				left join sys_org so on bc.organization = so.org_id
				left  join sys_org_type sot on so.org_id = sot.org_id
				left join sys_dictionary dic on dic.dictionary_code = sot.org_type 
			<where>
				dic.is_del = '1'
				<if test="ContractorCondition.orgCode!=null and ContractorCondition.orgCode!=''">and so.org_code  like '%' || #{ContractorCondition.orgCode} || '%' </if>
				<if test="ContractorCondition.orgName!=null and ContractorCondition.orgName!=''">and so.org_name  like '%' || #{ContractorCondition.orgName} || '%' </if>		
				<if test="ContractorCondition.orgType!=null and ContractorCondition.orgType!=''">and sot.org_type = #{ContractorCondition.orgType}</if>		
			</where>
		)
	</select>
	<insert id="insert" useGeneratedKeys="false">
		insert into b_contractor (
			contractor_id,organization,contract_no,operate_area,work_address,register_capital,
			register_address,link_man,link_phone,email,legal_representative,enterprise_property,
			create_time,create_user_id,create_user_name,contractor_state
			) values (
				#{contractorId},#{organization.orgId},#{contractNo},#{operateArea},#{workAddress},#{registerCapital},
				#{registerAddress},#{linkMan},#{linkPhone},#{email},#{legalRepresentative},#{enterpriseProperty},#{createTime},#{createUserId},
				#{createUserName},#{contractorState}
			)
	</insert>
	<!-- 更新承包商信息 -->
	<update id="update" >
	    update b_contractor
	    <set >
	      contract_no = #{contractNo},operate_area = #{operateArea},work_address = #{workAddress},
	      register_capital = #{registerCapital},register_address = #{registerAddress},
	      <if test="linkMan != null and linkMan != ''" >link_man = #{linkMan},</if>
	      <if test="linkPhone != null and linkPhone != ''" >link_phone = #{linkPhone},</if>
	      <if test="email != null and email != ''" >email = #{email},</if>
			<if test="contractorState != null and contractorState != ''" >contractor_state = #{contractorState},</if>
	      legal_representative = #{legalRepresentative},enterprise_property = #{enterpriseProperty}
	    </set>
	    where contractor_id = #{contractorId}
  </update>
	
	
	<!-- 根据主键查询项目信息 -->
	<select id="selectByPk" resultMap="contractorMap" parameterType="string">
		select <include refid="all" />,wm_concat(to_char(DICTIONARY_NAME)) as org_type_name,
    	wm_concat(to_char(DICTIONARY_code)) as org_type from b_contractor bc
		left join sys_org so on bc.organization = so.org_id
		left join sys_org_type sot on so.org_id = sot.org_id
    	left join sys_dictionary dic on dic.dictionary_code = sot.org_type
		<where>
			bc.contractor_id = #{contractorId}
		</where>
		group by bc.contractor_id,bc.contract_no,bc.operate_area,bc.work_address,bc.register_capital,bc.register_address,
		bc.link_man,bc.link_phone,bc.email,bc.legal_representative,bc.enterprise_property,so.org_id,so.org_code,so.org_name,
		bc.create_time,bc.create_user_id,bc.create_user_name,bc.contractor_state
	</select>

	<delete id="delete" parameterType="string">
		delete from b_contractor where contractor_id = #{contractorId}
	</delete>

</mapper>